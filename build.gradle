plugins {
    id 'java'
}

group pGroup

sourceSets.main {
    java.srcDir("src/")
    resources.srcDir("assets/")
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation "com.github.Anuken.Mindustry:core:$pMindustryVersion"
}

ext {
    isWindows = {
        return System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')
    }
}

task alphableed doFirst {
    exec {
        workingDir "$rootDir"

        println "Alpha-bleeding sprites..."
        if(isWindows()) {
            commandLine("cmd", "/c", "alpha-bleeding-windows.exe", "--replace", "assets/sprites/")
        } else {
            commandLine("./alpha-bleed", "assets/sprites/")
        }
    }
}

jar {
    archiveFileName.set pArtifactFilename
}

task dexify(type: Jar) {
    archiveName "dexed-$pArtifactFilename"

    final File jarArtifact = new File(tasks.jar.archiveFile.get().asFile.parent, pArtifactFilename),
               dexedArtifact = new File(tasks.dexify.getTemporaryDir(), "dexed.jar")
    doFirst {
        exec {
            workingDir dexedArtifact.parent
            def command = ["d8", "--min-api", pMinApi, "--output", dexedArtifact, jarArtifact]
            if(isWindows())
                commandLine("cmd", "/c", *command)
            else
                commandLine(*command)

        }
    }

    from(zipTree(jarArtifact), zipTree(dexedArtifact))
}

task buildDex dependsOn "build", "dexify"
